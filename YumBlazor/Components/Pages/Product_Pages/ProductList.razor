@page "/product"


@inject IProductRepository _ProductRepository
@inject IJSRuntime _IJS
@inject NavigationManager _navigationManager

<BSModal OnModalConfirmation="ConfirmDelete_Click"
         ButtonBootStrapStyle="btn-danger"
         ButtonText="Delete"
         Title="Are you sure you want to delete this product?"></BSModal>

@if (IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="Loading=" />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Product List</h2>
                </div>
            </div>
        </div>

        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">

                    <a href="product/create" class="btn btn-lg btn-secondary mb-3" style="width:250px"><i class="bi bi-plus-square">Add New Product</i></a>

                </div>
                @if (Products.Any())
                {
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Special Tag</th>
                                <th>Category</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var obj in Products)
                            {
                                <tr>
                                    <td>@obj.Name</td>
                                    <td>@obj.Price.ToString("C")</td>
                                    <td><span class="badge text-bg-info">@obj.SpecialTag</span></td>
                                    <td>@obj.Category</td>
                                    <td>
                                        <a href="@($"product/update/{obj.Id}")" class="btn btn-primary">
                                            <i class="bi bi-pencil-square"></i>Edit
                                        </a>
                                        <button class="btn btn-danger" @onclick="()=>HandleDelete(obj.Id)">
                                            <i class="bi bi-trash3"></i> Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                }
            </div>
        </div>
    </div>
}

@code {

    private bool IsProcessing { get; set; } = true;
    private IEnumerable<Product> Products { get; set; } = new List<Product>();
    private int DeleteProductId;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadProducts();
            IsProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadProducts()
    {
        Products = await _ProductRepository.GetAllAsync();
    }

    private void HandleDelete(int id)
    {
        _IJS.InvokeVoidAsync("ShowConfirmationModal");
        DeleteProductId = id;

    }

    public async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsProcessing = true;

        if (isConfirmed && DeleteProductId != 0)
        {
            var result = await _ProductRepository.DeleteAsync(DeleteProductId);

            if (result)
                _IJS?.ToastrSuccess("Product deleted Successfully.");
            else
                _IJS?.ToastrError("Error Encountered while deleteing.");

            await LoadProducts();
        }

        DeleteProductId = 0;
        IsProcessing = false;
        await _IJS!.InvokeVoidAsync("HideConfirmationModal");

    }
}
